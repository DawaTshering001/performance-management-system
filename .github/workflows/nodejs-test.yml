name: Node.js CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Run backend tests
        run: |
          cd backend
          npm test

  build-and-test:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t performance-app:test .

      - name: Start Docker container
        run: |
          docker run -d \
            --name performance-app-test \
            -p 4000:4000 \
            performance-app:test

      - name: Wait for app to start
        run: |
          attempt_counter=0
          max_attempts=30
          until docker exec performance-app-test curl -sSf http://localhost:4000 || [ $attempt_counter -eq $max_attempts ]
          do
            echo "Waiting for app to become ready... (attempt: $attempt_counter)"
            attempt_counter=$((attempt_counter+1))
            sleep 1
          done

          if [ $attempt_counter -eq $max_attempts ]; then
            echo "❌ Container failed to start properly"
            echo "===== Container logs ====="
            docker logs performance-app-test
            exit 1
          fi

      - name: Smoke test
        run: |
          echo "✅ Running smoke tests..."
          docker exec performance-app-test curl -sSf http://localhost:4000 || \
            (echo "❌ Homepage test failed" && docker logs performance-app-test && exit 1)
          docker exec performance-app-test curl -sSf http://localhost:4000/api/auth/status || \
            (echo "❌ API status test failed" && docker logs performance-app-test && exit 1)

      - name: Check container logs
        if: always()
        run: |
          echo "===== Final container logs ====="
          docker logs performance-app-test

      - name: Cleanup Docker container
        if: always()
        run: |
          docker stop performance-app-test || true
          docker rm performance-app-test || true
